#!/usr/bin/env bash
# This launcher setups environemnt required by Perl in snapped apps.
# 林博仁(Buo-ren, Lin) © 2021

set \
    -o errexit \
    -o errtrace \
    -o nounset \
    -o pipefail

shopt \
    -s nullglob

paths_string_insert(){
    if test $# -ne 2; then
        printf -- \
            '%s: FATAL: Arugment quantity mismatch.\n' \
            "${FUNCNAME[0]}" \
            1>&2
        exit 1
    fi

    local -n paths_string="${1}"; shift
    local insertion="${1}"

    if test -z "${paths_string}"; then
        paths_string="${insertion}"
    else
        paths_string="${paths_string}:${insertion}"
    fi
}

init(){
    if ! test -v X_DEBIAN_MULTIARCH_TRIPLET; then
        # The backticks is not command substitution, but the <code> Markdown markup
        # shellcheck disable=SC2016
        printf -- \
            'perl-launch: Error: This launcher requires the `debian-multiarch-triplet-provider-launch` launcher to be run in the first place.\n' \
            >&2
        exit 1
    fi

    declare PERLLIB=
    # FIXME: Drop /etc and /usr/local paths if unnecessary
    for perl_path in \
        "${SNAP}"/usr/lib/"${X_DEBIAN_MULTIARCH_TRIPLET}"/perl/* \
        "${SNAP}"/usr/lib/"${X_DEBIAN_MULTIARCH_TRIPLET}"/perl5/* \
        "${SNAP}"/usr/lib/"${X_DEBIAN_MULTIARCH_TRIPLET}"/perl-base \
        "${SNAP}"/usr/share/perl/* \
        "${SNAP}"/usr/share/perl5 \
        "${SNAP}"/etc/perl \
        "${SNAP}"/usr/local/lib/"${X_DEBIAN_MULTIARCH_TRIPLET}"/perl/* \
        "${SNAP}"/usr/local/share/perl/* \
        "${SNAP}"/usr/local/lib/site_perl; do
        # When `nullglob` is enabled filename matching returns null string when no files are matched
        if test -n "${perl_path}"; then
            test -v SNAPCRAFT_DEBUG \
                && printf -- \
                    'perl-launch: DEBUG: Adding %s to PERLLIB.\n' \
                    "${perl_path}" \
                    1>&2
            paths_string_insert \
                PERLLIB \
                "${perl_path}"
        fi
    done
    export PERLLIB

    exec "${@}"
}

init "${@}"
